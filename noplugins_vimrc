
"" N O   R C  "" 

set noshowmode          

"can be overridden be extended fiel"
set history=1000
set undofile
set undoreload=1000

" Enable filetype plugins
filetype plugin on
filetype indent on

" Set to auto read when a file is changed from the outside
set autoread

let mapleader = ","

set scrolloff=10               " let 10 lines before/after cursor during scroll

" Avoid garbled characters in Chinese language windows OS
if has("win32")
        "Убираем крякозябры из-за CP-1251 Windows. Работает только в начале файла
        set langmenu=en_US.UTF-8    " sets the language of the menu (gvim)
        language en                 " sets the language of the messages / ui (vim)
endif

set showcmd                     " shows partial commands
set hidden                      " hide the inactive buffers
set showcmd                     " shows partial commands
set hidden                      " hide the inactive buffers
set ruler                       " sets a permanent rule
set lazyredraw                  " only redraws if it is needed

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

set incsearch                   " incremental searching
set showmatch                   " show pairs match
set matchtime=3                 " было 5. Но это долго для меня
set hlsearch                    " highlight search results
set smartcase                   " smart case ignore
set ignorecase                  " ignore case letters


set wildmenu                        " Command line autocompletion
set wildmode=list:longest,full      " Shows all the options

set wildignore+=*.sw?                            " Vim swap files
set wildignore+=*.bak,*.?~,*.??~,*.???~,*.~      " Backup files
set wildignore+=*.luac                           " Lua byte code
set wildignore+=*.jar                            " java archives
set wildignore+=*.pyc                            " Python byte code
set wildignore+=*.stats                          " Pylint stats
set wildignore=*.o,*~

" Ignore compiled files
if has("win16") || has("win32")
    set wildignore+=.git\*,.hg\*,.svn\*
else
    set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/.DS_Store
endif

" Enable syntax highlighting
syntax enable

" Use spaces instead of tabs
set expandtab

" Be smart when using tabs ;)
set smarttab

" 1 tab == 4 spaces
set shiftwidth=4
set tabstop=4

" Linebreak on 90 characters
set lbr
set textwidth=90

set autoindent              "Auto indent
set smartindent             "Smart indentt
set wrap                    "Wrap lines

set showbreak=↳                "↪ как альтернатива

:autocmd BufEnter * silent! :lcd%:p:h | redraw!

autocmd BufLeave,BufWinLeave * silent! mkview
autocmd BufReadPost * silent! loadview

filetype on
filetype plugin on
filetype plugin indent on


set softtabstop=4
set laststatus=2                "always show status bar
set timeoutlen=350
set ttimeoutlen=0

set encoding=utf-8  " The encoding displayed.
set fileencoding=utf-8  " The encoding written to file.

set splitright
set splitbelow
set nocompatible                "use Vim settings, ratheset enc=utf-8
set tags=./tags,tags;$HOME
set ignorecase
set hidden

hi cursorline cterm=none term=none
autocmd WinEnter * setlocal cursorline
autocmd WinLeave * setlocal nocursorline
highlight CursorLine guibg=#303000 ctermbg=234

set pumheight=10
set fillchars+=vert:\
filetype off
filetype plugin on
filetype plugin indent on
set nu
set rnu                          " rnu а значит relative number. It was three hours of my live
set belloff=all                 "desable bell
set tabstop=4                   " set tabs for a shifttabs logic
set exrc                       " enable usage of additional .vimrc files from working directory
set secure                      " prohibit .vimrc files to execute shell, create files, etc...

 map q: :q

set keymap=ru                  "отредактированный из Dropbox! "
set iminsert=0
set imsearch=0                   "Начинаать с латинской keemap

tab sball
set switchbuf=useopen

vnoremap <silent> * :<C-u>call VisualSelection('', '')<CR>/<C-R>=@/<CR><CR>
vnoremap <silent> # :<C-u>call VisualSelection('', '')<CR>?<C-R>=@/<CR><CR>
